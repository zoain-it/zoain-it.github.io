<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 记录</title><link>https://blog.zoain.me/posts/</link><description>Recent content in Posts on 记录</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 09 Apr 2021 22:09:23 +0800</lastBuildDate><atom:link href="https://blog.zoain.me/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>操作系统概述</title><link>https://blog.zoain.me/2021/04/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</link><pubDate>Fri, 09 Apr 2021 22:09:23 +0800</pubDate><guid>https://blog.zoain.me/2021/04/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</guid><description>操作系统 向下管理各种计算资源，向上为应用程序提供运行环境和开发支撑，为用户提供交互界面。
什么是操作系统 狭义的操作系统指的是操作系统内核加上一个Shell。 广义的操作系统又可以进一步分为操作系统内核与操作系统框架两层。 简要结构 Android 操作系统结构 应用程序 Android 应用 操作系统（框架、内核） Android 操作系统（Android 框架、Linux 内核） 硬件设备 智能手机设备 硬件角度 操作系统将复杂的、具备不同功能的硬件资源纳入统一管理。此外，操作系统还通过设备驱动来管理各种外部设备的运行并处理可能的错误情况。 操作系统负责将硬件抽象成不依赖具体硬件特性的资源。在这个过程中，操作系统的核心功能是将有限的、离散的资源高效地抽象为无限的、连续的资源，并通过易用的接口提供给上层的应用，从而使应用无须关心硬件的具体细节。 软件角度 操作系统提供了各种不同层次、不同功能的接口（如系统调用等）以满足应用的需求，还提供了不同类型的访问控制、应用间交互等服务。 操作系统还负责对应用生命周期的管理，包括应用的加载、启动、切换、调度、销毁等。通过对应用的管理，操作系统弄够从全局角度进行资源分配，从而保证应用间的公平性、性能与安全的隔离型，限制少数恶意应用对系统整体产生的影响。 操作系统必要性的思考 如果一台机器有且只有一个应用程序，开机后自动运行且不会退出，是否还需要操作系统？
如果没有操作系统，那么应用就需要直接和硬件打交道，直接实现对硬件资源的管理与抽象的功能，如果应用出现故障，就可能引起计算机直接崩溃，而没有诊断和调试的机会。
如果一个应用希望直接控制硬件而不是使用操作系统提供的抽象，是否还需要操作系统？ 尽管应用希望直接控制硬件，但是应用的加载与销毁、多个应用之间的切换与隔离等管理工作依然需要操作系统来完成。</description><content type="html"><![CDATA[<h2 id="操作系统">操作系统</h2>
<p>向下管理各种计算资源，向上为应用程序提供运行环境和开发支撑，为用户提供交互界面。</p>
<h3 id="什么是操作系统">什么是操作系统</h3>
<ol>
<li>狭义的操作系统指的是操作系统内核加上一个Shell。</li>
<li>广义的操作系统又可以进一步分为操作系统内核与操作系统框架两层。</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:left">简要结构</th>
<th style="text-align:left">Android 操作系统结构</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">应用程序</td>
<td style="text-align:left">Android 应用</td>
</tr>
<tr>
<td style="text-align:left">操作系统（框架、内核）</td>
<td style="text-align:left">Android 操作系统（Android 框架、Linux 内核）</td>
</tr>
<tr>
<td style="text-align:left">硬件设备</td>
<td style="text-align:left">智能手机设备</td>
</tr>
</tbody>
</table>
<h4 id="硬件角度">硬件角度</h4>
<ol>
<li>操作系统将复杂的、具备不同功能的硬件资源纳入统一管理。此外，操作系统还通过设备驱动来管理各种外部设备的运行并处理可能的错误情况。</li>
<li>操作系统负责将硬件抽象成不依赖具体硬件特性的资源。在这个过程中，操作系统的核心功能是<code>将有限的、离散的资源高效地抽象为无限的、连续的资源</code>，并通过易用的接口提供给上层的应用，从而使应用无须关心硬件的具体细节。</li>
</ol>
<h4 id="软件角度">软件角度</h4>
<ol>
<li>操作系统提供了各种不同层次、不同功能的接口（如系统调用等）以满足应用的需求，还提供了不同类型的访问控制、应用间交互等服务。</li>
<li>操作系统还负责对应用生命周期的管理，包括应用的加载、启动、切换、调度、销毁等。通过对应用的管理，操作系统弄够从全局角度进行资源分配，从而保证应用间的公平性、性能与安全的隔离型，限制少数恶意应用对系统整体产生的影响。</li>
</ol>
<h4 id="操作系统必要性的思考">操作系统必要性的思考</h4>
<ol>
<li>如果一台机器有且只有一个应用程序，开机后自动运行且不会退出，是否还需要操作系统？<br></li>
</ol>
<blockquote>
<p>如果没有操作系统，那么应用就需要直接和硬件打交道，直接实现对硬件资源的管理与抽象的功能，如果应用出现故障，就可能引起计算机直接崩溃，而没有诊断和调试的机会。</p>
</blockquote>
<ol start="2">
<li>如果一个应用希望直接控制硬件而不是使用操作系统提供的抽象，是否还需要操作系统？</li>
</ol>
<blockquote>
<p>尽管应用希望直接控制硬件，但是应用的加载与销毁、多个应用之间的切换与隔离等管理工作依然需要操作系统来完成。</p>
</blockquote>
]]></content></item><item><title>About You</title><link>https://blog.zoain.me/2021/02/about-you/</link><pubDate>Wed, 24 Feb 2021 00:34:29 +0800</pubDate><guid>https://blog.zoain.me/2021/02/about-you/</guid><description/><content type="html"></content></item></channel></rss>